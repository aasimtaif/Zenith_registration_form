{"ast":null,"code":"var _jsxFileName = \"/home/mohdasim/code/asus laptop/zenith/zenith-web/src/UploadImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Input from '@mui/material/Input';\nimport Button from '@mui/material/Button';\nimport { db, storage } from \"./fireBaseConfig\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { collection, addDoc, serverTimestamp } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadImage() {\n  _s();\n  const [image, setImage] = useState();\n  const [imageUrl, setImageUrl] = useState();\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      // console.log(e.target.files[0]);\n      setImage(e.target.files[0]);\n    }\n  };\n  const uploadImage = async () => {\n    console.log(\"imageUploading\");\n    if (!image) {\n      console.log(\"image not found\");\n      return;\n    }\n    console.log('Uploadign the image');\n    const storageRef = ref(storage, `images/${image.name}`);\n    const uploadTask = uploadBytesResumable(storageRef, image);\n    // console.log(image)\n    uploadTask.on(\"state_changed\", snapshot => {\n      const prog = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      // setProgress(prog);\n    }, error => console.log(error));\n    await uploadTask; // ðŸ‘ˆ uploadTask is a promise itself, so you can await it\n\n    let downloadURL = await getDownloadURL(uploadTask.snapshot.ref);\n    // ðŸ‘† getDownloadURL returns a promise too, so... yay more await\n    setImageUrl(downloadURL);\n    return downloadURL; // ðŸ‘ˆ return the URL to the caller\n  };\n\n  const postToStorage = () => {\n    uploadImage();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"file\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      onClick: postToStorage,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadImage, \"uXZn/RofnNv4JulEplHnkc8NJ5M=\");\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["React","useState","Input","Button","db","storage","ref","uploadBytesResumable","getDownloadURL","collection","addDoc","serverTimestamp","UploadImage","image","setImage","imageUrl","setImageUrl","handleChange","e","target","files","uploadImage","console","log","storageRef","name","uploadTask","on","snapshot","prog","Math","round","bytesTransferred","totalBytes","error","downloadURL","postToStorage"],"sources":["/home/mohdasim/code/asus laptop/zenith/zenith-web/src/UploadImage.js"],"sourcesContent":["import React, { useState } from 'react'\nimport Input from '@mui/material/Input';\nimport Button from '@mui/material/Button';\nimport { db, storage } from \"./fireBaseConfig\"\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { collection, addDoc, serverTimestamp } from \"firebase/firestore\";\n\nfunction UploadImage() {\n    const [image, setImage] = useState();\n    const [imageUrl, setImageUrl] = useState();\n    const handleChange = (e) => {\n        if (e.target.files[0]) {\n            // console.log(e.target.files[0]);\n            setImage(e.target.files[0])\n        }\n    }\n    const uploadImage = async () => {\n\n        console.log(\"imageUploading\")\n        if (!image) {\n            console.log(\"image not found\");\n            return\n        }\n        console.log('Uploadign the image')\n        const storageRef = ref(storage, `images/${image.name}`)\n        const uploadTask = uploadBytesResumable(storageRef, image)\n        // console.log(image)\n        uploadTask.on(\n            \"state_changed\",\n            (snapshot) => {\n                const prog = Math.round(\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                );\n                // setProgress(prog);\n            },\n            (error) => console.log(error)\n        );\n        await uploadTask; // ðŸ‘ˆ uploadTask is a promise itself, so you can await it\n\n        let downloadURL = await getDownloadURL(uploadTask.snapshot.ref);\n        // ðŸ‘† getDownloadURL returns a promise too, so... yay more await\nsetImageUrl(downloadURL)\n        return downloadURL; // ðŸ‘ˆ return the URL to the caller\n    }\nconst postToStorage = ()=>{\n    uploadImage()\n \n\n}\n\n    return (\n        <div>\n            <Input type=\"file\" onChange={handleChange} />\n            <Button type=\"button\" onClick={postToStorage}>Submit</Button>\n\n        </div>\n    )\n}\n\nexport default UploadImage"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,EAAE,EAAEC,OAAO,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,EAAEC,oBAAoB,EAAEC,cAAc,QAAQ,kBAAkB;AAC5E,SAASC,UAAU,EAAEC,MAAM,EAAEC,eAAe,QAAQ,oBAAoB;AAAC;AAEzE,SAASC,WAAW,GAAG;EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,EAAE;EACpC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,EAAE;EAC1C,MAAMgB,YAAY,GAAIC,CAAC,IAAK;IACxB,IAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MACnB;MACAN,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC/B;EACJ,CAAC;EACD,MAAMC,WAAW,GAAG,YAAY;IAE5BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7B,IAAI,CAACV,KAAK,EAAE;MACRS,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9B;IACJ;IACAD,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC,MAAMC,UAAU,GAAGlB,GAAG,CAACD,OAAO,EAAG,UAASQ,KAAK,CAACY,IAAK,EAAC,CAAC;IACvD,MAAMC,UAAU,GAAGnB,oBAAoB,CAACiB,UAAU,EAAEX,KAAK,CAAC;IAC1D;IACAa,UAAU,CAACC,EAAE,CACT,eAAe,EACdC,QAAQ,IAAK;MACV,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAClBH,QAAQ,CAACI,gBAAgB,GAAGJ,QAAQ,CAACK,UAAU,GAAI,GAAG,CAC1D;MACD;IACJ,CAAC,EACAC,KAAK,IAAKZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC,CAChC;IACD,MAAMR,UAAU,CAAC,CAAC;;IAElB,IAAIS,WAAW,GAAG,MAAM3B,cAAc,CAACkB,UAAU,CAACE,QAAQ,CAACtB,GAAG,CAAC;IAC/D;IACRU,WAAW,CAACmB,WAAW,CAAC;IAChB,OAAOA,WAAW,CAAC,CAAC;EACxB,CAAC;;EACL,MAAMC,aAAa,GAAG,MAAI;IACtBf,WAAW,EAAE;EAGjB,CAAC;EAEG,oBACI;IAAA,wBACI,QAAC,KAAK;MAAC,IAAI,EAAC,MAAM;MAAC,QAAQ,EAAEJ;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eAC7C,QAAC,MAAM;MAAC,IAAI,EAAC,QAAQ;MAAC,OAAO,EAAEmB,aAAc;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAE3D;AAEd;AAAC,GAlDQxB,WAAW;AAAA,KAAXA,WAAW;AAoDpB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}