{"ast":null,"code":"var _jsxFileName = \"/home/mohdasim/code/asus laptop/zenith/zenith-web/src/UploadImage.js\";\nimport React from 'react';\nimport Input from '@mui/material/Input';\nimport Button from '@mui/material/Button';\n// import { db, storage } from \"./fireBaseConfig\"\n// import { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\n// import { collection, addDoc, serverTimestamp } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadImage() {\n  const uploadImage = () => {};\n  console.log(\"imageUploading\");\n  if (!image) {\n    console.log(\"image not found\");\n    return;\n  }\n  const storageRef = ref(storage, `images/${image.name}`);\n  const uploadTask = uploadBytesResumable(storageRef, image);\n  console.log(image);\n  uploadTask.on(\"state_changed\", snapshot => {\n    const prog = Math.round(snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n    // setProgress(prog)\n  }, err => {\n    console.log(err);\n    alert(err);\n  }, () => {\n    getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n      const docRef = await addDoc(collection(db, \"info\"), {\n        timestamp: serverTimestamp(),\n        imageurl: downloadURL\n      });\n      console.log(\"Document written with ID: \", docRef.id);\n      // setUrl(downloadURL)\n      console.log('File available at', downloadURL);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      onClick: uploadImage,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["React","Input","Button","UploadImage","uploadImage","console","log","image","storageRef","ref","storage","name","uploadTask","uploadBytesResumable","on","snapshot","prog","Math","round","bytesTransferred","totalBytes","err","alert","getDownloadURL","then","downloadURL","docRef","addDoc","collection","db","timestamp","serverTimestamp","imageurl","id"],"sources":["/home/mohdasim/code/asus laptop/zenith/zenith-web/src/UploadImage.js"],"sourcesContent":["import React from 'react'\nimport Input from '@mui/material/Input';\nimport Button from '@mui/material/Button';\n// import { db, storage } from \"./fireBaseConfig\"\n// import { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\n// import { collection, addDoc, serverTimestamp } from \"firebase/firestore\";\n\nfunction UploadImage() {\n    const uploadImage = () => {\n\n    }\n    console.log(\"imageUploading\")\n    if (!image) {\n        console.log(\"image not found\");\n        return\n    }\n    const storageRef = ref(storage, `images/${image.name}`)\n    const uploadTask = uploadBytesResumable(storageRef, image)\n    console.log(image)\n    uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n            const prog = Math.round(snapshot.bytesTransferred / snapshot.totalBytes) * 100\n            // setProgress(prog)\n        },\n        (err) => {\n            console.log(err)\n            alert(err)\n        },\n        () => {\n            getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n                const docRef = await addDoc(collection(db, \"info\"), {\n                    timestamp: serverTimestamp(),\n\n                    imageurl: downloadURL\n                });\n                console.log(\"Document written with ID: \", docRef.id);\n                // setUrl(downloadURL)\n                console.log('File available at', downloadURL);\n            });\n\n\n        }\n    )\n    return (\n        <div>\n            <Input type=\"file\" />\n            <Button type=\"button\" onClick={uploadImage}>Submit</Button>\n\n        </div>\n    )\n}\n\nexport default UploadImage"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC;AACA;AACA;AAAA;AAEA,SAASC,WAAW,GAAG;EACnB,MAAMC,WAAW,GAAG,MAAM,CAE1B,CAAC;EACDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC7B,IAAI,CAACC,KAAK,EAAE;IACRF,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B;EACJ;EACA,MAAME,UAAU,GAAGC,GAAG,CAACC,OAAO,EAAG,UAASH,KAAK,CAACI,IAAK,EAAC,CAAC;EACvD,MAAMC,UAAU,GAAGC,oBAAoB,CAACL,UAAU,EAAED,KAAK,CAAC;EAC1DF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EAClBK,UAAU,CAACE,EAAE,CACT,eAAe,EACdC,QAAQ,IAAK;IACV,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,QAAQ,CAACI,gBAAgB,GAAGJ,QAAQ,CAACK,UAAU,CAAC,GAAG,GAAG;IAC9E;EACJ,CAAC,EACAC,GAAG,IAAK;IACLhB,OAAO,CAACC,GAAG,CAACe,GAAG,CAAC;IAChBC,KAAK,CAACD,GAAG,CAAC;EACd,CAAC,EACD,MAAM;IACFE,cAAc,CAACX,UAAU,CAACG,QAAQ,CAACN,GAAG,CAAC,CAACe,IAAI,CAAC,MAAOC,WAAW,IAAK;MAChE,MAAMC,MAAM,GAAG,MAAMC,MAAM,CAACC,UAAU,CAACC,EAAE,EAAE,MAAM,CAAC,EAAE;QAChDC,SAAS,EAAEC,eAAe,EAAE;QAE5BC,QAAQ,EAAEP;MACd,CAAC,CAAC;MACFpB,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEoB,MAAM,CAACO,EAAE,CAAC;MACpD;MACA5B,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEmB,WAAW,CAAC;IACjD,CAAC,CAAC;EAGN,CAAC,CACJ;EACD,oBACI;IAAA,wBACI,QAAC,KAAK;MAAC,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACrB,QAAC,MAAM;MAAC,IAAI,EAAC,QAAQ;MAAC,OAAO,EAAErB,WAAY;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAEzD;AAEd;AAAC,KA5CQD,WAAW;AA8CpB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}