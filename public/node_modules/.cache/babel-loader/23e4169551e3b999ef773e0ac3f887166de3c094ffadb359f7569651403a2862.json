{"ast":null,"code":"var _jsxFileName = \"/home/mohdasim/code/asus laptop/zenith/form/src/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import Input from '@mui/material/Input';\nimport Button from '@mui/material/Button';\nimport InputBase from '@mui/material/InputBase';\nimport { db, storage } from \"./fireBaseConfig\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { collection, addDoc, serverTimestamp } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  const [inputValues, setInputValues] = useState({});\n  const [imageInputValues, setImageInputValues] = useState({\n    IdCard: \"\",\n    payment: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n  const [imageUrl, setImageUrl] = useState(null);\n  const handleChange = event => {\n    event.preventDefault();\n    const name = event.target.name;\n    const value = event.target.value;\n    if (name === 'IdCard' || name === 'payment') {\n      // console.log(event.target?.files[0])\n      setImageInputValues({\n        ...imageInputValues,\n        [name]: event.target.files[0]\n      });\n    } else {\n      setInputValues({\n        ...inputValues,\n        [name]: value\n      });\n    }\n  };\n\n  // console.log(inputValues, imageInputValues)\n  const imageUploading = (imageName, image) => {\n    if (!image) {\n      console.log(\"image not found\");\n      return;\n    }\n    const storageRef = ref(storage, `images/${image.name}`);\n    const uploadTask = uploadBytesResumable(storageRef, image);\n    // console.log(image)\n    uploadTask.on(\"state_changed\", snapshot => {\n      const prog = Math.round(snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n      // setProgress(prog)\n    }, err => {\n      console.log(err);\n      alert(err);\n    }, () => {\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        // const docRef = await addDoc(collection(db, \"teamInfo\"), {\n        //     timestamp: serverTimestamp(),\n        //     name: inputValues.CaptainName,\n        //     email: inputValues.email,\n        //     [imageName]: downloadURL\n        // });\n        // console.log(\"Document written with ID: \", docRef.id); \n        console.log('File available at', downloadURL);\n        setImageUrl(prevState => ({\n          ...prevState,\n          [imageName]: downloadURL\n        }));\n\n        // setImageUrl(\n        //     (\n        //         {[imageName]: downloadURL})\n        //     )\n      });\n    });\n  };\n\n  const handleUpload = async event => {\n    event.preventDefault();\n\n    // console.log(Object.keys(inputValues))\n    const image = inputValues.IdCard;\n    console.log(\"imageUploading\");\n    imageUploading(\"IdCard\", imageInputValues.IdCard);\n    console.log(imageUploading(\"payment\", imageInputValues.payment));\n    console.log(imageUrl);\n    setTimeout(async () => {\n      if (!imageUrl) return;\n      console.log(\"uploading to databse\");\n      const docRef = await addDoc(collection(db, \"teamInfo\"), {\n        name: inputValues.CaptainName,\n        email: inputValues.email\n      });\n      console.log(\"Document written with ID: \", docRef.id);\n    }, 5000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration-form \",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(InputBase, {\n        required: true,\n        name: \"CaptainName\",\n        type: \"text\",\n        placeholder: \"Captain's Name..???\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"example@college.com ..???\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n        name: \"IdCard\",\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n        name: \"payment\",\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button \",\n        onClick: handleUpload,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"G1My0XT02sMr9jVYOyFnaA8y5a4=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","Button","InputBase","db","storage","ref","uploadBytesResumable","getDownloadURL","collection","addDoc","serverTimestamp","Form","inputValues","setInputValues","imageInputValues","setImageInputValues","IdCard","payment","loading","setLoading","imageUrl","setImageUrl","handleChange","event","preventDefault","name","target","value","files","imageUploading","imageName","image","console","log","storageRef","uploadTask","on","snapshot","prog","Math","round","bytesTransferred","totalBytes","err","alert","then","downloadURL","prevState","handleUpload","setTimeout","docRef","CaptainName","email","id"],"sources":["/home/mohdasim/code/asus laptop/zenith/form/src/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n// import Input from '@mui/material/Input';\nimport Button from '@mui/material/Button';\nimport InputBase from '@mui/material/InputBase';\nimport { db, storage } from \"./fireBaseConfig\"\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { collection, addDoc, serverTimestamp } from \"firebase/firestore\";\n\n\nfunction Form() {\n    const [inputValues, setInputValues] = useState({});\n    const [imageInputValues, setImageInputValues] = useState({\n        IdCard: \"\", payment: \"\"\n    });\n    const [loading, setLoading] = useState(false);\n    const [imageUrl, setImageUrl] = useState(null);\n\n    const handleChange = (event) => {\n        event.preventDefault();\n        const name = event.target.name\n        const value = event.target.value\n        if (name === 'IdCard' || name === 'payment') {\n            // console.log(event.target?.files[0])\n            setImageInputValues({\n                ...imageInputValues, [name]: event.target.files[0]\n            })\n        } else {\n            setInputValues({\n                ...inputValues, [name]: value\n            })\n        }\n    }\n\n    // console.log(inputValues, imageInputValues)\n    const imageUploading = (imageName, image) => {\n\n        if (!image) {\n            console.log(\"image not found\");\n            return\n        }\n        const storageRef = ref(storage, `images/${image.name}`)\n        const uploadTask = uploadBytesResumable(storageRef, image)\n        // console.log(image)\n        uploadTask.on(\n            \"state_changed\",\n            (snapshot) => {\n                const prog = Math.round(snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                // setProgress(prog)\n            },\n            (err) => {\n                console.log(err)\n                alert(err)\n            },\n            () => {\n                getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n                    // const docRef = await addDoc(collection(db, \"teamInfo\"), {\n                    //     timestamp: serverTimestamp(),\n                    //     name: inputValues.CaptainName,\n                    //     email: inputValues.email,\n                    //     [imageName]: downloadURL\n                    // });\n                    // console.log(\"Document written with ID: \", docRef.id); \n                    console.log('File available at', downloadURL);\n                    setImageUrl((prevState) => ({\n                        ...prevState,\n                        [imageName]: downloadURL,\n                    }));\n\n\n\n                    // setImageUrl(\n                    //     (\n                    //         {[imageName]: downloadURL})\n                    //     )\n\n                });\n\n\n            }\n        )\n\n    }\n\n\n    const handleUpload = async (event) => {\n        event.preventDefault();\n\n        // console.log(Object.keys(inputValues))\n        const image = inputValues.IdCard\n        console.log(\"imageUploading\")\n        imageUploading(\"IdCard\", imageInputValues.IdCard)\n\n        console.log(imageUploading(\"payment\", imageInputValues.payment))\n\n        console.log(imageUrl)\n        setTimeout(async () => {\n            if (!imageUrl) return\n            console.log(\"uploading to databse\")\n            const docRef = await addDoc(collection(db, \"teamInfo\"), {\n                name: inputValues.CaptainName,\n                email: inputValues.email,\n            });\n            console.log(\"Document written with ID: \", docRef.id);\n        }, 5000);\n\n\n\n    }\n\n    return (\n        <div className='registration-form '>\n            <form className='form'>\n                <InputBase required name=\"CaptainName\" type=\"text\" placeholder=\"Captain's Name..???\" onChange={handleChange} />\n                <InputBase name=\"email\" type=\"email\" placeholder=\"example@college.com ..???\" onChange={handleChange} />\n                <InputBase name=\"IdCard\" type=\"file\" onChange={handleChange} />\n                <InputBase name=\"payment\" type=\"file\" onChange={handleChange} />\n\n\n\n                <Button type=\"button \" onClick={handleUpload}>Submit</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default Form"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}